[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode world_vertex_coords, blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

uniform vec4 albedo : hint_color;
uniform float specular : hint_range(0,1);
uniform float metallic : hint_range(0,1);
uniform float roughness : hint_range(0,1);


uniform float CURVATURE = 5;
uniform float CURVATURE_ACTIVE = 1;
uniform float CURVATURE_DISTANCE = 70;

void vertex() {
	if(CURVATURE_ACTIVE == 1.0) {
		NORMAL = (WORLD_MATRIX * vec4(NORMAL, 0.0)).xyz;
		float dist = length(CAMERA_MATRIX[3].xyz - VERTEX) / CURVATURE_DISTANCE;
		VERTEX.y += -pow(dist, CURVATURE);
	}
}

void fragment() {
	vec2 base_uv = UV;
	ALBEDO = albedo.rgb * SCREEN_UV.y;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}"

[resource]
shader = SubResource( 2 )
shader_param/albedo = Color( 0.129412, 0.121569, 0.239216, 1 )
shader_param/specular = 0.54
shader_param/metallic = 0.425
shader_param/roughness = 0.367
shader_param/CURVATURE = 3.0
shader_param/CURVATURE_ACTIVE = 1.0
shader_param/CURVATURE_DISTANCE = 100.0
